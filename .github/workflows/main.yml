on: push
jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 15
          registry-url: https://registry.npmjs.org/
      - run: npm publish
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - run: npm ci && npm run build
        if: startsWith(github.ref, 'refs/tags/v')
      - uses: actions/create-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
      - uses: actions/upload-release-asset@v1
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./pkg/obs-cli-macos
          asset_name: obs-cli-macos
          asset_content_type: application/octet-stream
      - uses: actions/upload-release-asset@v1
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./pkg/obs-cli-linux
          asset_name: obs-cli-linux
          asset_content_type: application/octet-stream
      - uses: actions/upload-release-asset@v1
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./pkg/obs-cli-win.exe
          asset_name: obs-cli-win.exe
          asset_content_type: application/vnd.microsoft.portable-executable
